syntax = "proto2";

option go_package = "git.byted.org/ee/lark/im-protobuf/improto/searches";
option java_package = "com.ss.android.lark.pb";

import "entities.proto";

// 搜索service
service SearchGreeter {
    rpc search (SearchRequest) returns (SearchResponse) {
    }
    rpc searchUser (SearchChatterRequest) returns (SearchChatterResponse) {
    }
    rpc searchGroup (SearchGroupChatRequest) returns (SearchGroupChatResponse) {
    }
    rpc searchMessage (SearchMessageRequest) returns (SearchMessageResponse) {
    }
}

// 搜索用户、群会话、消息
message SearchRequest {
    optional string query = 1;
    optional int32 begin = 2 [default = 0];
    optional int32 end = 3 [default = 10];
}

message SearchResponse {
    optional SearchUserResponse users = 1; // users 接口逐渐废弃
    optional SearchGroupChatResponse group_chats = 2;
    optional SearchMessageResponse messages = 3;
    optional SearchChatterResponse chatters = 4;
}

// 搜索用户接口 [废弃，由搜索 chatter 接口替代
message SearchUserRequest {
    optional string query = 1;
    optional int32 begin = 2 [default = 0];
    optional int32 end = 3 [default = 10];
}

message SearchUserResponse {
    repeated User users = 1;
    optional int32 total = 2;
    optional bool has_more = 3;
}

// 搜索 chatter 接口
message SearchChatterRequest {
    optional string query = 1;
    optional int32 begin = 2 [default = 0];
    optional int32 end = 3 [default = 10];
}

message SearchChatterResponse {
    repeated Chatter chatters = 1;
    optional int32 total = 2;
    optional bool has_more = 3;
    map<string, Department> departments = 4;
    message Pair {
        optional string chatter_id = 1;
        optional string department_id = 2;
    }
    repeated Pair pairs = 5;
}

// 搜索群会话接口
message SearchGroupChatRequest {
    optional string query = 1;
    optional int32 begin = 2 [default = 0];
    optional int32 end = 3 [default = 10];
}

message SearchGroupChatResponse {
    repeated Chat chats = 1;
    optional int32 total = 2;
    optional bool has_more = 3;
}

// 搜索消息接口
message SearchMessageRequest {
    optional string query = 1;
    optional int32 begin = 2 [default = 0];
    optional int32 end = 3 [default = 10];
    optional string chat_id = 4;
    optional string from_id = 5;
    optional int64 start_time = 6 [default = 0];
    optional int64 end_time = 7 [default = 0];
}

message SearchMessageResponse {
    repeated Message messages = 1;
    optional int32 total = 2;
    optional bool has_more = 3;
}

enum Scene {
    //不同的搜索场景
    AT_USERS_SCENE = 1; //@人搜索 users+bots  暂时不支持
    ADD_CHATTERS_SCENE = 2; //群加人搜索 users

    TRANSMIT_MESSAGES_SCENE = 3; //转发消息搜索 users+chats
    SMART_SEARCH_SCENE = 4; //快速跳转 users+bots+chats
    SEARCH_MESSAGES_SCENE = 5; //搜消息 暂不支持
    SEARCH_CHATS_SCENE = 6; //搜会话 暂不支持
    SEARCH_CHATTERS_SCENE = 7; //搜联系人 暂不支持
}
message SceneVariable {
    //场景对应的变量
    optional string chat_id = 1;
}

//智能搜索
message SmartSearchRequest {

    optional string query = 1;
    optional int32 begin = 2 [default = 0];
    optional int32 end = 3 [default = 10];
    optional bool is_search_bot = 11 [default = true]; //废弃
    optional bool is_search_chat = 12 [default = true]; //废弃
    optional bool is_search_user = 13 [default = true]; //废弃
    optional Scene scene = 14 [default = SMART_SEARCH_SCENE]; //  指定搜索场景
    optional SceneVariable scene_variable = 15;
}

enum EntityType {
    CHATTER = 1;
    CHAT = 2;
    MESSAGE = 3;
}

message EntityPair {
    required string entity_id = 1;
    required EntityType type = 2;
    optional string department_id = 3; // for chatter
}

message SmartSearchResponse {
    map<string, Chat> chats = 1;
    map<string, Chatter> chatters = 2;
    map<string, Department> departments = 3; //部门
    optional bool has_more = 4;
    optional int32 total = 5;
    repeated EntityPair pairs = 6; //综合搜索排序依据
}


message PutSearchFeedbackRequest {
    //上报用户的搜索结果
    message Feedback {
        //支持一次选择多个相关文档的客户端反馈
        optional int32 offset = 1 [default = 0]; //总偏移量
        optional EntityType type = 2;
        optional string id = 3;
    }

    optional int32 offset = 1 [default = 0]; //废弃
    optional EntityType entity_type = 2; //废弃
    optional string entity_id = 3; //废弃
    optional string query = 4;
    optional Scene scene = 5; //搜索场景
    repeated Feedback feedbacks = 6;
    optional SceneVariable scene_variable = 7; //场景变量

}

message PutSearchFeedbackResponse {
}

message PullSearchHistoryEntitiesRequest {
}

message PullSearchHistoryEntitiesResponse {
    map<string, Chat> chats = 1;
    map<string, Chatter> chatters = 2;
    repeated EntityPair pairs = 3; //部门信息
    map<string, Department> departments = 4; //部门

}

message DeleteSearchHistoryEntityRequest {
    optional string entity_id = 1;
}

message DeleteSearchHistoryEntityResponse {
}