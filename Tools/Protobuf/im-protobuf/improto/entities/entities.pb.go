// Code generated by protoc-gen-go.
// source: entities.proto
// DO NOT EDIT!

/*
Package entities is a generated protocol buffer package.

It is generated from these files:
	entities.proto

It has these top-level messages:
	Image
	Urgent
	UrgentAck
	ImageSet
	Message
	TextContent
	ImageContent
	FileContent
	AudioContent
	PostContent
	EmailContent
	SystemContent
	Chat
	User
	Bot
	Chatter
	MessageReaction
	MessageReminder
	ChatSetting
	Department
	Notice
*/
package entities

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChatterType int32

const (
	// 描述会话参与者的类型
	ChatterType_USER ChatterType = 1
	ChatterType_BOT  ChatterType = 2
)

var ChatterType_name = map[int32]string{
	1: "USER",
	2: "BOT",
}
var ChatterType_value = map[string]int32{
	"USER": 1,
	"BOT":  2,
}

func (x ChatterType) Enum() *ChatterType {
	p := new(ChatterType)
	*p = x
	return p
}
func (x ChatterType) String() string {
	return proto.EnumName(ChatterType_name, int32(x))
}
func (x *ChatterType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatterType_value, data, "ChatterType")
	if err != nil {
		return err
	}
	*x = ChatterType(value)
	return nil
}
func (ChatterType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Urgent_Type int32

const (
	Urgent_APP   Urgent_Type = 1
	Urgent_SMS   Urgent_Type = 2
	Urgent_PHONE Urgent_Type = 3
)

var Urgent_Type_name = map[int32]string{
	1: "APP",
	2: "SMS",
	3: "PHONE",
}
var Urgent_Type_value = map[string]int32{
	"APP":   1,
	"SMS":   2,
	"PHONE": 3,
}

func (x Urgent_Type) Enum() *Urgent_Type {
	p := new(Urgent_Type)
	*p = x
	return p
}
func (x Urgent_Type) String() string {
	return proto.EnumName(Urgent_Type_name, int32(x))
}
func (x *Urgent_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Urgent_Type_value, data, "Urgent_Type")
	if err != nil {
		return err
	}
	*x = Urgent_Type(value)
	return nil
}
func (Urgent_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Message_Type int32

const (
	// TEXT_IMAGE 类型已经删去 reseved 1;
	Message_POST   Message_Type = 2
	Message_FILE   Message_Type = 3
	Message_TEXT   Message_Type = 4
	Message_IMAGE  Message_Type = 5
	Message_SYSTEM Message_Type = 6
	Message_AUDIO  Message_Type = 7
	Message_EMAIL  Message_Type = 8
)

var Message_Type_name = map[int32]string{
	2: "POST",
	3: "FILE",
	4: "TEXT",
	5: "IMAGE",
	6: "SYSTEM",
	7: "AUDIO",
	8: "EMAIL",
}
var Message_Type_value = map[string]int32{
	"POST":   2,
	"FILE":   3,
	"TEXT":   4,
	"IMAGE":  5,
	"SYSTEM": 6,
	"AUDIO":  7,
	"EMAIL":  8,
}

func (x Message_Type) Enum() *Message_Type {
	p := new(Message_Type)
	*p = x
	return p
}
func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}
func (x *Message_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Message_Type_value, data, "Message_Type")
	if err != nil {
		return err
	}
	*x = Message_Type(value)
	return nil
}
func (Message_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type Message_FromType int32

const (
	Message_USER Message_FromType = 1
	Message_BOT  Message_FromType = 2
)

var Message_FromType_name = map[int32]string{
	1: "USER",
	2: "BOT",
}
var Message_FromType_value = map[string]int32{
	"USER": 1,
	"BOT":  2,
}

func (x Message_FromType) Enum() *Message_FromType {
	p := new(Message_FromType)
	*p = x
	return p
}
func (x Message_FromType) String() string {
	return proto.EnumName(Message_FromType_name, int32(x))
}
func (x *Message_FromType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Message_FromType_value, data, "Message_FromType")
	if err != nil {
		return err
	}
	*x = Message_FromType(value)
	return nil
}
func (Message_FromType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 1} }

type Message_Status int32

const (
	Message_NORMAL   Message_Status = 1
	Message_DELETED  Message_Status = 2
	Message_MODIFIED Message_Status = 3
)

var Message_Status_name = map[int32]string{
	1: "NORMAL",
	2: "DELETED",
	3: "MODIFIED",
}
var Message_Status_value = map[string]int32{
	"NORMAL":   1,
	"DELETED":  2,
	"MODIFIED": 3,
}

func (x Message_Status) Enum() *Message_Status {
	p := new(Message_Status)
	*p = x
	return p
}
func (x Message_Status) String() string {
	return proto.EnumName(Message_Status_name, int32(x))
}
func (x *Message_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Message_Status_value, data, "Message_Status")
	if err != nil {
		return err
	}
	*x = Message_Status(value)
	return nil
}
func (Message_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 2} }

type SystemContent_Type int32

const (
	SystemContent_USER_MODIFY_GROUP_NAME        SystemContent_Type = 1
	SystemContent_USER_MODIFY_GROUP_AVATAR      SystemContent_Type = 2
	SystemContent_USER_MODIFY_GROUP_DESCRIPTION SystemContent_Type = 3
	SystemContent_USER_MODIFY_GROUP_SETTINGS    SystemContent_Type = 4
	SystemContent_USER_START_GROUP_AND_INVITE   SystemContent_Type = 5
	SystemContent_SYSTEM_WELCOME_USER           SystemContent_Type = 6
	SystemContent_USER_INVITE_OTHERS_JOIN       SystemContent_Type = 7
	SystemContent_USER_QUIT_GROUP               SystemContent_Type = 8
	SystemContent_USER_REMOVE_OTHERS            SystemContent_Type = 9
	SystemContent_USER_REMOVE_GROUP_DESCRIPTION SystemContent_Type = 10
	SystemContent_USER_CHECK_OTHERS_TELEPHONE   SystemContent_Type = 11
	SystemContent_DERIVE_FROM_P2P_CHAT          SystemContent_Type = 12
)

var SystemContent_Type_name = map[int32]string{
	1:  "USER_MODIFY_GROUP_NAME",
	2:  "USER_MODIFY_GROUP_AVATAR",
	3:  "USER_MODIFY_GROUP_DESCRIPTION",
	4:  "USER_MODIFY_GROUP_SETTINGS",
	5:  "USER_START_GROUP_AND_INVITE",
	6:  "SYSTEM_WELCOME_USER",
	7:  "USER_INVITE_OTHERS_JOIN",
	8:  "USER_QUIT_GROUP",
	9:  "USER_REMOVE_OTHERS",
	10: "USER_REMOVE_GROUP_DESCRIPTION",
	11: "USER_CHECK_OTHERS_TELEPHONE",
	12: "DERIVE_FROM_P2P_CHAT",
}
var SystemContent_Type_value = map[string]int32{
	"USER_MODIFY_GROUP_NAME":        1,
	"USER_MODIFY_GROUP_AVATAR":      2,
	"USER_MODIFY_GROUP_DESCRIPTION": 3,
	"USER_MODIFY_GROUP_SETTINGS":    4,
	"USER_START_GROUP_AND_INVITE":   5,
	"SYSTEM_WELCOME_USER":           6,
	"USER_INVITE_OTHERS_JOIN":       7,
	"USER_QUIT_GROUP":               8,
	"USER_REMOVE_OTHERS":            9,
	"USER_REMOVE_GROUP_DESCRIPTION": 10,
	"USER_CHECK_OTHERS_TELEPHONE":   11,
	"DERIVE_FROM_P2P_CHAT":          12,
}

func (x SystemContent_Type) Enum() *SystemContent_Type {
	p := new(SystemContent_Type)
	*p = x
	return p
}
func (x SystemContent_Type) String() string {
	return proto.EnumName(SystemContent_Type_name, int32(x))
}
func (x *SystemContent_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SystemContent_Type_value, data, "SystemContent_Type")
	if err != nil {
		return err
	}
	*x = SystemContent_Type(value)
	return nil
}
func (SystemContent_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

type Chat_Type int32

const (
	Chat_P2P   Chat_Type = 1
	Chat_GROUP Chat_Type = 2
)

var Chat_Type_name = map[int32]string{
	1: "P2P",
	2: "GROUP",
}
var Chat_Type_value = map[string]int32{
	"P2P":   1,
	"GROUP": 2,
}

func (x Chat_Type) Enum() *Chat_Type {
	p := new(Chat_Type)
	*p = x
	return p
}
func (x Chat_Type) String() string {
	return proto.EnumName(Chat_Type_name, int32(x))
}
func (x *Chat_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Chat_Type_value, data, "Chat_Type")
	if err != nil {
		return err
	}
	*x = Chat_Type(value)
	return nil
}
func (Chat_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

type Chat_Status int32

const (
	Chat_NORMAL  Chat_Status = 0
	Chat_ARCHIVE Chat_Status = 1
	Chat_DELETED Chat_Status = 2
)

var Chat_Status_name = map[int32]string{
	0: "NORMAL",
	1: "ARCHIVE",
	2: "DELETED",
}
var Chat_Status_value = map[string]int32{
	"NORMAL":  0,
	"ARCHIVE": 1,
	"DELETED": 2,
}

func (x Chat_Status) Enum() *Chat_Status {
	p := new(Chat_Status)
	*p = x
	return p
}
func (x Chat_Status) String() string {
	return proto.EnumName(Chat_Status_name, int32(x))
}
func (x *Chat_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Chat_Status_value, data, "Chat_Status")
	if err != nil {
		return err
	}
	*x = Chat_Status(value)
	return nil
}
func (Chat_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 1} }

type Image struct {
	Key              *string  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Urls             []string `protobuf:"bytes,2,rep,name=urls" json:"urls,omitempty"`
	Width            *int32   `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height           *int32   `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Image) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Image) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

func (m *Image) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *Image) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

type Urgent struct {
	MessageId        *string      `protobuf:"bytes,1,req,name=message_id,json=messageId" json:"message_id,omitempty"`
	Type             *Urgent_Type `protobuf:"varint,2,opt,name=type,enum=Urgent_Type" json:"type,omitempty"`
	SendTime         *int64       `protobuf:"varint,3,opt,name=send_time,json=sendTime" json:"send_time,omitempty"`
	FromId           *string      `protobuf:"bytes,4,opt,name=from_id,json=fromId" json:"from_id,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Urgent) Reset()                    { *m = Urgent{} }
func (m *Urgent) String() string            { return proto.CompactTextString(m) }
func (*Urgent) ProtoMessage()               {}
func (*Urgent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Urgent) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *Urgent) GetType() Urgent_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Urgent_APP
}

func (m *Urgent) GetSendTime() int64 {
	if m != nil && m.SendTime != nil {
		return *m.SendTime
	}
	return 0
}

func (m *Urgent) GetFromId() string {
	if m != nil && m.FromId != nil {
		return *m.FromId
	}
	return ""
}

type UrgentAck struct {
	AckId            *string      `protobuf:"bytes,1,opt,name=ack_id,json=ackId" json:"ack_id,omitempty"`
	MessageId        *string      `protobuf:"bytes,2,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	ToId             *string      `protobuf:"bytes,3,opt,name=to_id,json=toId" json:"to_id,omitempty"`
	UrgentId         *string      `protobuf:"bytes,4,opt,name=urgent_id,json=urgentId" json:"urgent_id,omitempty"`
	SendTime         *int64       `protobuf:"varint,5,opt,name=send_time,json=sendTime" json:"send_time,omitempty"`
	Type             *Urgent_Type `protobuf:"varint,6,opt,name=type,enum=Urgent_Type" json:"type,omitempty"`
	Status           *int64       `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	ConfirmTime      *int64       `protobuf:"varint,8,opt,name=confirm_time,json=confirmTime" json:"confirm_time,omitempty"`
	PhoneStatus      *int64       `protobuf:"varint,9,opt,name=phone_status,json=phoneStatus" json:"phone_status,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *UrgentAck) Reset()                    { *m = UrgentAck{} }
func (m *UrgentAck) String() string            { return proto.CompactTextString(m) }
func (*UrgentAck) ProtoMessage()               {}
func (*UrgentAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UrgentAck) GetAckId() string {
	if m != nil && m.AckId != nil {
		return *m.AckId
	}
	return ""
}

func (m *UrgentAck) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *UrgentAck) GetToId() string {
	if m != nil && m.ToId != nil {
		return *m.ToId
	}
	return ""
}

func (m *UrgentAck) GetUrgentId() string {
	if m != nil && m.UrgentId != nil {
		return *m.UrgentId
	}
	return ""
}

func (m *UrgentAck) GetSendTime() int64 {
	if m != nil && m.SendTime != nil {
		return *m.SendTime
	}
	return 0
}

func (m *UrgentAck) GetType() Urgent_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Urgent_APP
}

func (m *UrgentAck) GetStatus() int64 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *UrgentAck) GetConfirmTime() int64 {
	if m != nil && m.ConfirmTime != nil {
		return *m.ConfirmTime
	}
	return 0
}

func (m *UrgentAck) GetPhoneStatus() int64 {
	if m != nil && m.PhoneStatus != nil {
		return *m.PhoneStatus
	}
	return 0
}

type ImageSet struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Origin           *Image  `protobuf:"bytes,2,opt,name=origin" json:"origin,omitempty"`
	Thumbnail        *Image  `protobuf:"bytes,3,opt,name=thumbnail" json:"thumbnail,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ImageSet) Reset()                    { *m = ImageSet{} }
func (m *ImageSet) String() string            { return proto.CompactTextString(m) }
func (*ImageSet) ProtoMessage()               {}
func (*ImageSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ImageSet) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *ImageSet) GetOrigin() *Image {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *ImageSet) GetThumbnail() *Image {
	if m != nil {
		return m.Thumbnail
	}
	return nil
}

type Message struct {
	Id                    *string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                  *Message_Type     `protobuf:"varint,2,opt,name=type,enum=Message_Type" json:"type,omitempty"`
	FromId                *string           `protobuf:"bytes,3,opt,name=from_id,json=fromId" json:"from_id,omitempty"`
	CreateTime            *int64            `protobuf:"varint,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Content               []byte            `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	Status                *Message_Status   `protobuf:"varint,6,opt,name=status,enum=Message_Status" json:"status,omitempty"`
	FromType              *Message_FromType `protobuf:"varint,7,opt,name=from_type,json=fromType,enum=Message_FromType" json:"from_type,omitempty"`
	RootId                *string           `protobuf:"bytes,8,opt,name=root_id,json=rootId" json:"root_id,omitempty"`
	ParentId              *string           `protobuf:"bytes,9,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	ChatId                *string           `protobuf:"bytes,10,opt,name=chat_id,json=chatId" json:"chat_id,omitempty"`
	LastModifyTime        *int64            `protobuf:"varint,11,opt,name=last_modify_time,json=lastModifyTime" json:"last_modify_time,omitempty"`
	Cid                   *string           `protobuf:"bytes,12,opt,name=cid" json:"cid,omitempty"`
	Position              *int32            `protobuf:"varint,13,opt,name=position" json:"position,omitempty"`
	UpdateTime            *int64            `protobuf:"varint,14,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	IsNotified            *bool             `protobuf:"varint,15,opt,name=is_notified,json=isNotified" json:"is_notified,omitempty"`
	ReplyCount            *string           `protobuf:"bytes,16,opt,name=reply_count,json=replyCount" json:"reply_count,omitempty"`
	ParentSourceMessageId *string           `protobuf:"bytes,17,opt,name=parent_source_message_id,json=parentSourceMessageId" json:"parent_source_message_id,omitempty"`
	RootSourceMessageId   *string           `protobuf:"bytes,18,opt,name=root_source_message_id,json=rootSourceMessageId" json:"root_source_message_id,omitempty"`
	IsDing                *bool             `protobuf:"varint,19,opt,name=is_ding,json=isDing" json:"is_ding,omitempty"`
	ThreadId              *string           `protobuf:"bytes,20,opt,name=thread_id,json=threadId" json:"thread_id,omitempty"`
	SendToChat            *bool             `protobuf:"varint,21,opt,name=send_to_chat,json=sendToChat" json:"send_to_chat,omitempty"`
	IsTruncated           *bool             `protobuf:"varint,22,opt,name=is_truncated,json=isTruncated,def=0" json:"is_truncated,omitempty"`
	XXX_unrecognized      []byte            `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

const Default_Message_IsTruncated bool = false

func (m *Message) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Message) GetType() Message_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Message_POST
}

func (m *Message) GetFromId() string {
	if m != nil && m.FromId != nil {
		return *m.FromId
	}
	return ""
}

func (m *Message) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *Message) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Message) GetStatus() Message_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Message_NORMAL
}

func (m *Message) GetFromType() Message_FromType {
	if m != nil && m.FromType != nil {
		return *m.FromType
	}
	return Message_USER
}

func (m *Message) GetRootId() string {
	if m != nil && m.RootId != nil {
		return *m.RootId
	}
	return ""
}

func (m *Message) GetParentId() string {
	if m != nil && m.ParentId != nil {
		return *m.ParentId
	}
	return ""
}

func (m *Message) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *Message) GetLastModifyTime() int64 {
	if m != nil && m.LastModifyTime != nil {
		return *m.LastModifyTime
	}
	return 0
}

func (m *Message) GetCid() string {
	if m != nil && m.Cid != nil {
		return *m.Cid
	}
	return ""
}

func (m *Message) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *Message) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *Message) GetIsNotified() bool {
	if m != nil && m.IsNotified != nil {
		return *m.IsNotified
	}
	return false
}

func (m *Message) GetReplyCount() string {
	if m != nil && m.ReplyCount != nil {
		return *m.ReplyCount
	}
	return ""
}

func (m *Message) GetParentSourceMessageId() string {
	if m != nil && m.ParentSourceMessageId != nil {
		return *m.ParentSourceMessageId
	}
	return ""
}

func (m *Message) GetRootSourceMessageId() string {
	if m != nil && m.RootSourceMessageId != nil {
		return *m.RootSourceMessageId
	}
	return ""
}

func (m *Message) GetIsDing() bool {
	if m != nil && m.IsDing != nil {
		return *m.IsDing
	}
	return false
}

func (m *Message) GetThreadId() string {
	if m != nil && m.ThreadId != nil {
		return *m.ThreadId
	}
	return ""
}

func (m *Message) GetSendToChat() bool {
	if m != nil && m.SendToChat != nil {
		return *m.SendToChat
	}
	return false
}

func (m *Message) GetIsTruncated() bool {
	if m != nil && m.IsTruncated != nil {
		return *m.IsTruncated
	}
	return Default_Message_IsTruncated
}

type TextContent struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TextContent) Reset()                    { *m = TextContent{} }
func (m *TextContent) String() string            { return proto.CompactTextString(m) }
func (*TextContent) ProtoMessage()               {}
func (*TextContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TextContent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type ImageContent struct {
	Image            *ImageSet `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ImageContent) Reset()                    { *m = ImageContent{} }
func (m *ImageContent) String() string            { return proto.CompactTextString(m) }
func (*ImageContent) ProtoMessage()               {}
func (*ImageContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ImageContent) GetImage() *ImageSet {
	if m != nil {
		return m.Image
	}
	return nil
}

type FileContent struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Size             *int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Mime             *string `protobuf:"bytes,4,opt,name=mime" json:"mime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FileContent) Reset()                    { *m = FileContent{} }
func (m *FileContent) String() string            { return proto.CompactTextString(m) }
func (*FileContent) ProtoMessage()               {}
func (*FileContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *FileContent) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *FileContent) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FileContent) GetSize() int64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *FileContent) GetMime() string {
	if m != nil && m.Mime != nil {
		return *m.Mime
	}
	return ""
}

type AudioContent struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Duration         *int32  `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	Size             *int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AudioContent) Reset()                    { *m = AudioContent{} }
func (m *AudioContent) String() string            { return proto.CompactTextString(m) }
func (*AudioContent) ProtoMessage()               {}
func (*AudioContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AudioContent) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *AudioContent) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *AudioContent) GetSize() int64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

type PostContent struct {
	Title            *string  `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Text             *string  `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Attachments      []string `protobuf:"bytes,3,rep,name=attachments" json:"attachments,omitempty"`
	IsNotified       *bool    `protobuf:"varint,4,opt,name=is_notified,json=isNotified" json:"is_notified,omitempty"`
	CommentCount     *string  `protobuf:"bytes,5,opt,name=comment_count,json=commentCount" json:"comment_count,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PostContent) Reset()                    { *m = PostContent{} }
func (m *PostContent) String() string            { return proto.CompactTextString(m) }
func (*PostContent) ProtoMessage()               {}
func (*PostContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PostContent) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *PostContent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *PostContent) GetAttachments() []string {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *PostContent) GetIsNotified() bool {
	if m != nil && m.IsNotified != nil {
		return *m.IsNotified
	}
	return false
}

func (m *PostContent) GetCommentCount() string {
	if m != nil && m.CommentCount != nil {
		return *m.CommentCount
	}
	return ""
}

type EmailContent struct {
	Title            *string  `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Text             *string  `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Attachments      []string `protobuf:"bytes,3,rep,name=attachments" json:"attachments,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *EmailContent) Reset()                    { *m = EmailContent{} }
func (m *EmailContent) String() string            { return proto.CompactTextString(m) }
func (*EmailContent) ProtoMessage()               {}
func (*EmailContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *EmailContent) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *EmailContent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *EmailContent) GetAttachments() []string {
	if m != nil {
		return m.Attachments
	}
	return nil
}

type SystemContent struct {
	MessageTemplate  *string             `protobuf:"bytes,1,req,name=message_template,json=messageTemplate" json:"message_template,omitempty"`
	Contents         map[string]string   `protobuf:"bytes,2,rep,name=contents" json:"contents,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Type             *SystemContent_Type `protobuf:"varint,3,opt,name=type,enum=SystemContent_Type" json:"type,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *SystemContent) Reset()                    { *m = SystemContent{} }
func (m *SystemContent) String() string            { return proto.CompactTextString(m) }
func (*SystemContent) ProtoMessage()               {}
func (*SystemContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SystemContent) GetMessageTemplate() string {
	if m != nil && m.MessageTemplate != nil {
		return *m.MessageTemplate
	}
	return ""
}

func (m *SystemContent) GetContents() map[string]string {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *SystemContent) GetType() SystemContent_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return SystemContent_USER_MODIFY_GROUP_NAME
}

type Chat struct {
	Id                  *string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                *Chat_Type   `protobuf:"varint,2,opt,name=type,enum=Chat_Type,def=1" json:"type,omitempty"`
	LastMessageId       *string      `protobuf:"bytes,3,opt,name=last_message_id,json=lastMessageId" json:"last_message_id,omitempty"`
	Name                *string      `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Avatar              *Image       `protobuf:"bytes,5,opt,name=avatar" json:"avatar,omitempty"`
	OwnerId             *string      `protobuf:"bytes,6,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	NewMessageCount     *int32       `protobuf:"varint,7,opt,name=new_message_count,json=newMessageCount" json:"new_message_count,omitempty"`
	Status              *Chat_Status `protobuf:"varint,8,opt,name=status,enum=Chat_Status" json:"status,omitempty"`
	UpdateTime          *int64       `protobuf:"varint,9,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	Key                 *string      `protobuf:"bytes,10,opt,name=key" json:"key,omitempty"`
	Description         *string      `protobuf:"bytes,11,opt,name=description" json:"description,omitempty"`
	MemberCount         *int32       `protobuf:"varint,12,opt,name=member_count,json=memberCount" json:"member_count,omitempty"`
	IsDepartment        *bool        `protobuf:"varint,13,opt,name=is_department,json=isDepartment" json:"is_department,omitempty"`
	IsPublic            *bool        `protobuf:"varint,14,opt,name=is_public,json=isPublic" json:"is_public,omitempty"`
	LastMessagePosition *int32       `protobuf:"varint,15,opt,name=last_message_position,json=lastMessagePosition" json:"last_message_position,omitempty"`
	UserCount           *int32       `protobuf:"varint,16,opt,name=user_count,json=userCount" json:"user_count,omitempty"`
	NamePinyin          *string      `protobuf:"bytes,17,opt,name=name_pinyin,json=namePinyin" json:"name_pinyin,omitempty"`
	CreateTime          *int64       `protobuf:"varint,18,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	IsCustomerService   *bool        `protobuf:"varint,19,opt,name=is_customer_service,json=isCustomerService" json:"is_customer_service,omitempty"`
	NamePy              *string      `protobuf:"bytes,100,opt,name=name_py,json=namePy" json:"name_py,omitempty"`
	XXX_unrecognized    []byte       `json:"-"`
}

func (m *Chat) Reset()                    { *m = Chat{} }
func (m *Chat) String() string            { return proto.CompactTextString(m) }
func (*Chat) ProtoMessage()               {}
func (*Chat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

const Default_Chat_Type Chat_Type = Chat_P2P

func (m *Chat) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Chat) GetType() Chat_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_Chat_Type
}

func (m *Chat) GetLastMessageId() string {
	if m != nil && m.LastMessageId != nil {
		return *m.LastMessageId
	}
	return ""
}

func (m *Chat) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Chat) GetAvatar() *Image {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *Chat) GetOwnerId() string {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return ""
}

func (m *Chat) GetNewMessageCount() int32 {
	if m != nil && m.NewMessageCount != nil {
		return *m.NewMessageCount
	}
	return 0
}

func (m *Chat) GetStatus() Chat_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Chat_NORMAL
}

func (m *Chat) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *Chat) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Chat) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Chat) GetMemberCount() int32 {
	if m != nil && m.MemberCount != nil {
		return *m.MemberCount
	}
	return 0
}

func (m *Chat) GetIsDepartment() bool {
	if m != nil && m.IsDepartment != nil {
		return *m.IsDepartment
	}
	return false
}

func (m *Chat) GetIsPublic() bool {
	if m != nil && m.IsPublic != nil {
		return *m.IsPublic
	}
	return false
}

func (m *Chat) GetLastMessagePosition() int32 {
	if m != nil && m.LastMessagePosition != nil {
		return *m.LastMessagePosition
	}
	return 0
}

func (m *Chat) GetUserCount() int32 {
	if m != nil && m.UserCount != nil {
		return *m.UserCount
	}
	return 0
}

func (m *Chat) GetNamePinyin() string {
	if m != nil && m.NamePinyin != nil {
		return *m.NamePinyin
	}
	return ""
}

func (m *Chat) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *Chat) GetIsCustomerService() bool {
	if m != nil && m.IsCustomerService != nil {
		return *m.IsCustomerService
	}
	return false
}

func (m *Chat) GetNamePy() string {
	if m != nil && m.NamePy != nil {
		return *m.NamePy
	}
	return ""
}

type User struct {
	Id         *string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name       *string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Avatar     *ImageSet `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	Status     *int32    `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	AvatarUrl  *string   `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	NamePinyin *string   `protobuf:"bytes,6,opt,name=name_pinyin,json=namePinyin" json:"name_pinyin,omitempty"`
	UpdateTime *int64    `protobuf:"varint,7,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	// [废弃] optional string phone_number = 8;
	IsRegistered     *bool   `protobuf:"varint,9,opt,name=is_registered,json=isRegistered" json:"is_registered,omitempty"`
	NamePy           *string `protobuf:"bytes,10,opt,name=name_py,json=namePy" json:"name_py,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *User) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *User) GetAvatar() *ImageSet {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *User) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *User) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *User) GetNamePinyin() string {
	if m != nil && m.NamePinyin != nil {
		return *m.NamePinyin
	}
	return ""
}

func (m *User) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *User) GetIsRegistered() bool {
	if m != nil && m.IsRegistered != nil {
		return *m.IsRegistered
	}
	return false
}

func (m *User) GetNamePy() string {
	if m != nil && m.NamePy != nil {
		return *m.NamePy
	}
	return ""
}

type Bot struct {
	Id               *string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name             *string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Avatar           *ImageSet `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	Status           *int32    `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	AvatarUrl        *string   `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	UpdateTime       *int64    `protobuf:"varint,6,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	CreatorId        *string   `protobuf:"bytes,7,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	Description      *string   `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
	NamePy           *string   `protobuf:"bytes,10,opt,name=name_py,json=namePy" json:"name_py,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Bot) Reset()                    { *m = Bot{} }
func (m *Bot) String() string            { return proto.CompactTextString(m) }
func (*Bot) ProtoMessage()               {}
func (*Bot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Bot) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Bot) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Bot) GetAvatar() *ImageSet {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *Bot) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *Bot) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *Bot) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *Bot) GetCreatorId() string {
	if m != nil && m.CreatorId != nil {
		return *m.CreatorId
	}
	return ""
}

func (m *Bot) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Bot) GetNamePy() string {
	if m != nil && m.NamePy != nil {
		return *m.NamePy
	}
	return ""
}

type Chatter struct {
	Id         *string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name       *string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Avatar     *ImageSet    `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	Status     *int32       `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	AvatarUrl  *string      `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	UpdateTime *int64       `protobuf:"varint,6,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	NamePinyin *string      `protobuf:"bytes,7,opt,name=name_pinyin,json=namePinyin" json:"name_pinyin,omitempty"`
	CreatorId  *string      `protobuf:"bytes,8,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	Type       *ChatterType `protobuf:"varint,9,opt,name=type,enum=ChatterType" json:"type,omitempty"`
	// [废弃] optional string phone_number = 10;
	Description      *string `protobuf:"bytes,11,opt,name=description" json:"description,omitempty"`
	IsRegistered     *bool   `protobuf:"varint,12,opt,name=is_registered,json=isRegistered" json:"is_registered,omitempty"`
	NamePy           *string `protobuf:"bytes,13,opt,name=name_py,json=namePy" json:"name_py,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Chatter) Reset()                    { *m = Chatter{} }
func (m *Chatter) String() string            { return proto.CompactTextString(m) }
func (*Chatter) ProtoMessage()               {}
func (*Chatter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Chatter) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Chatter) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Chatter) GetAvatar() *ImageSet {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *Chatter) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *Chatter) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *Chatter) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *Chatter) GetNamePinyin() string {
	if m != nil && m.NamePinyin != nil {
		return *m.NamePinyin
	}
	return ""
}

func (m *Chatter) GetCreatorId() string {
	if m != nil && m.CreatorId != nil {
		return *m.CreatorId
	}
	return ""
}

func (m *Chatter) GetType() ChatterType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ChatterType_USER
}

func (m *Chatter) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Chatter) GetIsRegistered() bool {
	if m != nil && m.IsRegistered != nil {
		return *m.IsRegistered
	}
	return false
}

func (m *Chatter) GetNamePy() string {
	if m != nil && m.NamePy != nil {
		return *m.NamePy
	}
	return ""
}

type MessageReaction struct {
	MessageId        *string                     `protobuf:"bytes,1,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	Reactions        []*MessageReaction_Reaction `protobuf:"bytes,2,rep,name=reactions" json:"reactions,omitempty"`
	UpdateTime       *int64                      `protobuf:"varint,3,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *MessageReaction) Reset()                    { *m = MessageReaction{} }
func (m *MessageReaction) String() string            { return proto.CompactTextString(m) }
func (*MessageReaction) ProtoMessage()               {}
func (*MessageReaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MessageReaction) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *MessageReaction) GetReactions() []*MessageReaction_Reaction {
	if m != nil {
		return m.Reactions
	}
	return nil
}

func (m *MessageReaction) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

type MessageReaction_Reaction struct {
	Type             *string  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Count            *int32   `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	UserIds          []string `protobuf:"bytes,3,rep,name=user_ids,json=userIds" json:"user_ids,omitempty"`
	ChatterIds       []string `protobuf:"bytes,4,rep,name=chatter_ids,json=chatterIds" json:"chatter_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MessageReaction_Reaction) Reset()                    { *m = MessageReaction_Reaction{} }
func (m *MessageReaction_Reaction) String() string            { return proto.CompactTextString(m) }
func (*MessageReaction_Reaction) ProtoMessage()               {}
func (*MessageReaction_Reaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16, 0} }

func (m *MessageReaction_Reaction) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *MessageReaction_Reaction) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *MessageReaction_Reaction) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *MessageReaction_Reaction) GetChatterIds() []string {
	if m != nil {
		return m.ChatterIds
	}
	return nil
}

type MessageReminder struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	MessageId        *string `protobuf:"bytes,2,req,name=message_id,json=messageId" json:"message_id,omitempty"`
	ReminderTime     *int64  `protobuf:"varint,3,req,name=reminder_time,json=reminderTime" json:"reminder_time,omitempty"`
	ChatId           *string `protobuf:"bytes,4,req,name=chat_id,json=chatId" json:"chat_id,omitempty"`
	ReminderPosition *int32  `protobuf:"varint,5,req,name=reminder_position,json=reminderPosition,def=0" json:"reminder_position,omitempty"`
	Canceled         *bool   `protobuf:"varint,6,req,name=canceled,def=0" json:"canceled,omitempty"`
	ConfirmedTime    *int64  `protobuf:"varint,7,req,name=confirmed_time,json=confirmedTime" json:"confirmed_time,omitempty"`
	MessagePosition  *int32  `protobuf:"varint,8,req,name=message_position,json=messagePosition,def=0" json:"message_position,omitempty"`
	UpdateTime       *int64  `protobuf:"varint,9,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MessageReminder) Reset()                    { *m = MessageReminder{} }
func (m *MessageReminder) String() string            { return proto.CompactTextString(m) }
func (*MessageReminder) ProtoMessage()               {}
func (*MessageReminder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

const Default_MessageReminder_ReminderPosition int32 = 0
const Default_MessageReminder_Canceled bool = false
const Default_MessageReminder_MessagePosition int32 = 0

func (m *MessageReminder) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *MessageReminder) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *MessageReminder) GetReminderTime() int64 {
	if m != nil && m.ReminderTime != nil {
		return *m.ReminderTime
	}
	return 0
}

func (m *MessageReminder) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *MessageReminder) GetReminderPosition() int32 {
	if m != nil && m.ReminderPosition != nil {
		return *m.ReminderPosition
	}
	return Default_MessageReminder_ReminderPosition
}

func (m *MessageReminder) GetCanceled() bool {
	if m != nil && m.Canceled != nil {
		return *m.Canceled
	}
	return Default_MessageReminder_Canceled
}

func (m *MessageReminder) GetConfirmedTime() int64 {
	if m != nil && m.ConfirmedTime != nil {
		return *m.ConfirmedTime
	}
	return 0
}

func (m *MessageReminder) GetMessagePosition() int32 {
	if m != nil && m.MessagePosition != nil {
		return *m.MessagePosition
	}
	return Default_MessageReminder_MessagePosition
}

func (m *MessageReminder) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

type ChatSetting struct {
	IsRemind         *bool  `protobuf:"varint,1,opt,name=is_remind,json=isRemind,def=1" json:"is_remind,omitempty"`
	UpdateTime       *int64 `protobuf:"varint,2,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChatSetting) Reset()                    { *m = ChatSetting{} }
func (m *ChatSetting) String() string            { return proto.CompactTextString(m) }
func (*ChatSetting) ProtoMessage()               {}
func (*ChatSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

const Default_ChatSetting_IsRemind bool = true

func (m *ChatSetting) GetIsRemind() bool {
	if m != nil && m.IsRemind != nil {
		return *m.IsRemind
	}
	return Default_ChatSetting_IsRemind
}

func (m *ChatSetting) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

type Department struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ParentId         *string `protobuf:"bytes,3,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	LeaderId         *string `protobuf:"bytes,4,opt,name=leader_id,json=leaderId" json:"leader_id,omitempty"`
	MemberCount      *int32  `protobuf:"varint,5,opt,name=member_count,json=memberCount" json:"member_count,omitempty"`
	Status           *int32  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	NamePinyin       *string `protobuf:"bytes,7,opt,name=name_pinyin,json=namePinyin" json:"name_pinyin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Department) Reset()                    { *m = Department{} }
func (m *Department) String() string            { return proto.CompactTextString(m) }
func (*Department) ProtoMessage()               {}
func (*Department) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Department) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Department) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Department) GetParentId() string {
	if m != nil && m.ParentId != nil {
		return *m.ParentId
	}
	return ""
}

func (m *Department) GetLeaderId() string {
	if m != nil && m.LeaderId != nil {
		return *m.LeaderId
	}
	return ""
}

func (m *Department) GetMemberCount() int32 {
	if m != nil && m.MemberCount != nil {
		return *m.MemberCount
	}
	return 0
}

func (m *Department) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *Department) GetNamePinyin() string {
	if m != nil && m.NamePinyin != nil {
		return *m.NamePinyin
	}
	return ""
}

type Notice struct {
	ShouldNotify     *bool   `protobuf:"varint,1,opt,name=should_notify,json=shouldNotify,def=0" json:"should_notify,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content          *string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Summary          *string `protobuf:"bytes,4,opt,name=summary" json:"summary,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Notice) Reset()                    { *m = Notice{} }
func (m *Notice) String() string            { return proto.CompactTextString(m) }
func (*Notice) ProtoMessage()               {}
func (*Notice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

const Default_Notice_ShouldNotify bool = false

func (m *Notice) GetShouldNotify() bool {
	if m != nil && m.ShouldNotify != nil {
		return *m.ShouldNotify
	}
	return Default_Notice_ShouldNotify
}

func (m *Notice) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Notice) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *Notice) GetSummary() string {
	if m != nil && m.Summary != nil {
		return *m.Summary
	}
	return ""
}

func init() {
	proto.RegisterType((*Image)(nil), "Image")
	proto.RegisterType((*Urgent)(nil), "Urgent")
	proto.RegisterType((*UrgentAck)(nil), "UrgentAck")
	proto.RegisterType((*ImageSet)(nil), "ImageSet")
	proto.RegisterType((*Message)(nil), "Message")
	proto.RegisterType((*TextContent)(nil), "TextContent")
	proto.RegisterType((*ImageContent)(nil), "ImageContent")
	proto.RegisterType((*FileContent)(nil), "FileContent")
	proto.RegisterType((*AudioContent)(nil), "AudioContent")
	proto.RegisterType((*PostContent)(nil), "PostContent")
	proto.RegisterType((*EmailContent)(nil), "EmailContent")
	proto.RegisterType((*SystemContent)(nil), "SystemContent")
	proto.RegisterType((*Chat)(nil), "Chat")
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*Bot)(nil), "Bot")
	proto.RegisterType((*Chatter)(nil), "Chatter")
	proto.RegisterType((*MessageReaction)(nil), "MessageReaction")
	proto.RegisterType((*MessageReaction_Reaction)(nil), "MessageReaction.Reaction")
	proto.RegisterType((*MessageReminder)(nil), "MessageReminder")
	proto.RegisterType((*ChatSetting)(nil), "ChatSetting")
	proto.RegisterType((*Department)(nil), "Department")
	proto.RegisterType((*Notice)(nil), "Notice")
	proto.RegisterEnum("ChatterType", ChatterType_name, ChatterType_value)
	proto.RegisterEnum("Urgent_Type", Urgent_Type_name, Urgent_Type_value)
	proto.RegisterEnum("Message_Type", Message_Type_name, Message_Type_value)
	proto.RegisterEnum("Message_FromType", Message_FromType_name, Message_FromType_value)
	proto.RegisterEnum("Message_Status", Message_Status_name, Message_Status_value)
	proto.RegisterEnum("SystemContent_Type", SystemContent_Type_name, SystemContent_Type_value)
	proto.RegisterEnum("Chat_Type", Chat_Type_name, Chat_Type_value)
	proto.RegisterEnum("Chat_Status", Chat_Status_name, Chat_Status_value)
}

func init() { proto.RegisterFile("entities.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x58, 0xcd, 0x72, 0xdb, 0xc8,
	0xf1, 0xff, 0x13, 0xfc, 0x02, 0x9b, 0xa4, 0x04, 0x8f, 0x64, 0x99, 0x2b, 0xaf, 0x6c, 0x0a, 0xde,
	0x7f, 0x56, 0x71, 0x25, 0x54, 0x4a, 0x39, 0xec, 0x96, 0x73, 0xa2, 0x25, 0xd8, 0x46, 0x22, 0x8a,
	0x34, 0x48, 0x39, 0xd9, 0xdd, 0x03, 0x0a, 0x02, 0x46, 0xd2, 0x94, 0x08, 0x80, 0x05, 0x0c, 0xed,
	0x65, 0x0e, 0x39, 0xa5, 0x72, 0xce, 0x1b, 0xe4, 0x92, 0x27, 0xc9, 0x21, 0x79, 0x92, 0x54, 0xa5,
	0xf2, 0x0c, 0xa9, 0x54, 0x6a, 0x7a, 0x06, 0x20, 0x09, 0xca, 0xce, 0x29, 0x95, 0x9c, 0x30, 0xf3,
	0xeb, 0x9e, 0x9e, 0xe9, 0x9e, 0xfe, 0x1a, 0xc0, 0x16, 0x8d, 0x38, 0xe3, 0x8c, 0xa6, 0xbd, 0x59,
	0x12, 0xf3, 0xd8, 0xfc, 0x0e, 0xaa, 0x76, 0xe8, 0xdd, 0x50, 0x62, 0x40, 0xf9, 0x8e, 0x2e, 0x3a,
	0xa5, 0x6e, 0xe9, 0xa8, 0xe1, 0x88, 0x21, 0x21, 0x50, 0x99, 0x27, 0xd3, 0xb4, 0xa3, 0x75, 0xcb,
	0x47, 0x0d, 0x07, 0xc7, 0x64, 0x17, 0xaa, 0x1f, 0x58, 0xc0, 0x6f, 0x3b, 0xe5, 0x6e, 0xe9, 0xa8,
	0xea, 0xc8, 0x09, 0xd9, 0x83, 0xda, 0x2d, 0x65, 0x37, 0xb7, 0xbc, 0x53, 0x41, 0x58, 0xcd, 0xcc,
	0x3f, 0x96, 0xa0, 0x76, 0x99, 0xdc, 0xd0, 0x88, 0x93, 0x03, 0x80, 0x90, 0xa6, 0xa9, 0x77, 0x43,
	0x5d, 0x16, 0x74, 0x4a, 0x5d, 0xed, 0xa8, 0xe1, 0x34, 0x14, 0x62, 0x07, 0xa4, 0x0b, 0x15, 0xbe,
	0x98, 0xd1, 0x8e, 0xd6, 0x2d, 0x1d, 0x6d, 0x9d, 0xb4, 0x7a, 0x72, 0x55, 0x6f, 0xb2, 0x98, 0x51,
	0x07, 0x29, 0xe4, 0x31, 0x34, 0x52, 0x1a, 0x05, 0x2e, 0x67, 0x21, 0xc5, 0xdd, 0xcb, 0x8e, 0x2e,
	0x80, 0x09, 0x0b, 0x29, 0x79, 0x04, 0xf5, 0xeb, 0x24, 0x0e, 0x85, 0xe8, 0x0a, 0x2a, 0x50, 0x13,
	0x53, 0x3b, 0x30, 0x9f, 0x41, 0x45, 0xc8, 0x20, 0x75, 0x28, 0xf7, 0x47, 0x23, 0xa3, 0x24, 0x06,
	0xe3, 0xc1, 0xd8, 0xd0, 0x48, 0x03, 0xaa, 0xa3, 0x37, 0xc3, 0x0b, 0xcb, 0x28, 0x9b, 0xbf, 0xd7,
	0xa0, 0x21, 0x37, 0xec, 0xfb, 0x77, 0xe4, 0x21, 0xd4, 0x3c, 0xff, 0x4e, 0x9e, 0x52, 0x88, 0xaa,
	0x7a, 0xfe, 0x9d, 0x1d, 0x14, 0x14, 0xd0, 0x90, 0xb4, 0xa2, 0xc0, 0x0e, 0x54, 0x79, 0x2c, 0x28,
	0x65, 0xa4, 0x54, 0x78, 0x6c, 0x07, 0xe2, 0xcc, 0x73, 0x94, 0xbb, 0x3c, 0x98, 0x2e, 0x01, 0x49,
	0x5c, 0x2a, 0x54, 0x2d, 0x28, 0x94, 0xd9, 0xa3, 0xf6, 0x51, 0x7b, 0xec, 0x41, 0x2d, 0xe5, 0x1e,
	0x9f, 0xa7, 0x9d, 0x3a, 0xae, 0x55, 0x33, 0x72, 0x08, 0x2d, 0x3f, 0x8e, 0xae, 0x59, 0x12, 0x4a,
	0xc9, 0x3a, 0x52, 0x9b, 0x0a, 0x43, 0xe1, 0x87, 0xd0, 0x9a, 0xdd, 0xc6, 0x11, 0x75, 0x95, 0x80,
	0x86, 0x64, 0x41, 0x6c, 0x8c, 0x90, 0x79, 0x05, 0x3a, 0xba, 0xc5, 0x98, 0xf2, 0x7b, 0x3c, 0xe3,
	0x09, 0xd4, 0xe2, 0x84, 0xdd, 0xb0, 0x08, 0xed, 0xd0, 0x3c, 0xa9, 0xf5, 0x90, 0xd9, 0x51, 0x28,
	0xf9, 0x02, 0x1a, 0xfc, 0x76, 0x1e, 0x5e, 0x45, 0x1e, 0x9b, 0xa2, 0x41, 0x96, 0x2c, 0x4b, 0x82,
	0xf9, 0xbb, 0x3a, 0xd4, 0x07, 0xd2, 0x80, 0x64, 0x0b, 0xb4, 0xdc, 0xe0, 0x1a, 0x0b, 0xc8, 0xe1,
	0x9a, 0x3f, 0xb4, 0x7b, 0x8a, 0x6f, 0xd5, 0x00, 0x2b, 0x77, 0x5e, 0x5e, 0xbd, 0x73, 0xf2, 0x14,
	0x9a, 0x7e, 0x42, 0x3d, 0x4e, 0xa5, 0x01, 0x2a, 0xa8, 0x1d, 0x48, 0x08, 0xf5, 0xef, 0x40, 0xdd,
	0x8f, 0x23, 0x4e, 0x23, 0x8e, 0x76, 0x6f, 0x39, 0xd9, 0x94, 0x7c, 0x99, 0x1b, 0x55, 0x1a, 0x7e,
	0x3b, 0xdf, 0x58, 0xda, 0x25, 0xb7, 0x72, 0x0f, 0x1a, 0xb8, 0x39, 0x1e, 0xb2, 0x8e, 0xbc, 0x0f,
	0x72, 0xde, 0x57, 0x49, 0x1c, 0xe2, 0x41, 0xf5, 0x6b, 0x35, 0x12, 0x87, 0x4d, 0xe2, 0x18, 0xfd,
	0x40, 0x97, 0x87, 0x15, 0x53, 0xe9, 0x05, 0x33, 0x2f, 0x51, 0x2e, 0xd2, 0x90, 0x2e, 0x22, 0x01,
	0x3b, 0x10, 0xab, 0xfc, 0x5b, 0x0f, 0x49, 0x20, 0x57, 0x89, 0xa9, 0x1d, 0x90, 0x23, 0x30, 0xa6,
	0x5e, 0xca, 0xdd, 0x30, 0x0e, 0xd8, 0xf5, 0x42, 0xea, 0xd9, 0x44, 0x3d, 0xb7, 0x04, 0x3e, 0x40,
	0x18, 0x75, 0x35, 0xa0, 0xec, 0xb3, 0xa0, 0xd3, 0x92, 0x97, 0xe7, 0xb3, 0x80, 0xec, 0x83, 0x3e,
	0x8b, 0x53, 0xc6, 0x59, 0x1c, 0x75, 0xda, 0x18, 0xae, 0xf9, 0x5c, 0x98, 0x6e, 0x3e, 0x0b, 0x72,
	0xd3, 0x6d, 0x49, 0xd3, 0x49, 0x08, 0xc5, 0x3d, 0x85, 0x26, 0x4b, 0xdd, 0x28, 0xe6, 0xec, 0x9a,
	0xd1, 0xa0, 0xb3, 0xdd, 0x2d, 0x1d, 0xe9, 0x0e, 0xb0, 0xf4, 0x42, 0x21, 0x82, 0x21, 0xa1, 0xb3,
	0xe9, 0xc2, 0xf5, 0xe3, 0x79, 0xc4, 0x3b, 0x06, 0xee, 0x0b, 0x08, 0x9d, 0x0a, 0x84, 0x7c, 0x05,
	0x1d, 0xa5, 0x70, 0x1a, 0xcf, 0x13, 0x9f, 0xba, 0x2b, 0x51, 0xf5, 0x00, 0xb9, 0x1f, 0x4a, 0xfa,
	0x18, 0xc9, 0x83, 0x3c, 0xc2, 0x7e, 0x0a, 0x7b, 0x68, 0xc2, 0xcd, 0x65, 0x04, 0x97, 0xed, 0x08,
	0x6a, 0x71, 0xd1, 0x23, 0xa8, 0xb3, 0xd4, 0x0d, 0x58, 0x74, 0xd3, 0xd9, 0xc1, 0xb3, 0xd6, 0x58,
	0x7a, 0xc6, 0xa2, 0x1b, 0x61, 0x77, 0x7e, 0x9b, 0x50, 0x2f, 0x10, 0x02, 0x76, 0xa5, 0xdd, 0x25,
	0x80, 0xd9, 0xa8, 0x25, 0x43, 0x33, 0x76, 0x85, 0xc1, 0x3b, 0x0f, 0xa5, 0x9a, 0x18, 0x9d, 0xf1,
	0xe9, 0xad, 0xc7, 0xc9, 0x11, 0xb4, 0x58, 0xea, 0xf2, 0x64, 0x1e, 0xf9, 0x1e, 0xa7, 0x41, 0x67,
	0x4f, 0x70, 0xbc, 0xa8, 0x5e, 0x7b, 0xd3, 0x94, 0x3a, 0x4d, 0x96, 0x4e, 0x32, 0x8a, 0xf9, 0x56,
	0x65, 0x20, 0x1d, 0x2a, 0xa3, 0xe1, 0x78, 0x62, 0x68, 0x62, 0xf4, 0xca, 0x3e, 0xb7, 0x8c, 0xb2,
	0x18, 0x4d, 0xac, 0x5f, 0x4d, 0x8c, 0x8a, 0xc8, 0x46, 0xf6, 0xa0, 0xff, 0xda, 0x32, 0xaa, 0x04,
	0xa0, 0x36, 0xfe, 0x66, 0x3c, 0xb1, 0x06, 0x46, 0x4d, 0xc0, 0xfd, 0xcb, 0x33, 0x7b, 0x68, 0xd4,
	0xc5, 0xd0, 0x1a, 0xf4, 0xed, 0x73, 0x43, 0x37, 0x0f, 0x40, 0xcf, 0x5c, 0x4c, 0x88, 0xb8, 0x1c,
	0x5b, 0x8e, 0xcc, 0x6c, 0x2f, 0x87, 0x13, 0x43, 0x33, 0x8f, 0xa1, 0x26, 0xbd, 0x55, 0x88, 0xba,
	0x18, 0x3a, 0x83, 0xfe, 0xb9, 0x51, 0x22, 0x4d, 0xa8, 0x9f, 0x59, 0xe7, 0xd6, 0xc4, 0x3a, 0x33,
	0x34, 0xd2, 0x02, 0x7d, 0x30, 0x3c, 0xb3, 0x5f, 0xd9, 0xd6, 0x99, 0x51, 0x36, 0x0f, 0xa1, 0x39,
	0xa1, 0xdf, 0xf3, 0x53, 0x15, 0x04, 0x04, 0x2a, 0x9c, 0x7e, 0xcf, 0x55, 0x34, 0xe2, 0xd8, 0x3c,
	0x86, 0x16, 0xc6, 0x6f, 0xc6, 0xf3, 0x14, 0xaa, 0x4c, 0xcc, 0x91, 0xa9, 0x79, 0xd2, 0xe8, 0x65,
	0xd9, 0xc2, 0x91, 0xb8, 0xf9, 0x1d, 0x34, 0x5f, 0xb1, 0x69, 0xce, 0x7f, 0x6f, 0x75, 0x89, 0xbc,
	0x90, 0xaa, 0x4c, 0x8a, 0x63, 0x81, 0xa5, 0xec, 0xd7, 0x59, 0x7a, 0xc7, 0xb1, 0xc0, 0xc2, 0x2c,
	0x8c, 0x1b, 0x0e, 0x8e, 0xcd, 0x11, 0xb4, 0xfa, 0xf3, 0x80, 0xc5, 0x1f, 0x97, 0xbe, 0x0f, 0x7a,
	0x30, 0x4f, 0x3c, 0x74, 0x72, 0x4d, 0x3a, 0x79, 0x36, 0xbf, 0x6f, 0x17, 0xf3, 0x0f, 0x25, 0x68,
	0x8e, 0xe2, 0x34, 0xb7, 0xc1, 0x2e, 0x54, 0x39, 0xe3, 0x53, 0x9a, 0xd5, 0x00, 0x9c, 0xe4, 0x96,
	0xd1, 0x96, 0x96, 0x21, 0x5d, 0x68, 0x7a, 0x9c, 0x7b, 0xfe, 0x6d, 0x48, 0x23, 0x9e, 0x76, 0xca,
	0x58, 0x2c, 0x57, 0xa1, 0x62, 0xcc, 0x54, 0x36, 0x62, 0xe6, 0x19, 0xb4, 0xfd, 0x38, 0x14, 0xcc,
	0x2a, 0x6a, 0xaa, 0x28, 0xbf, 0xa5, 0x40, 0x8c, 0x1b, 0xf3, 0x5b, 0x68, 0x59, 0xa1, 0xc7, 0xa6,
	0xff, 0x81, 0x13, 0x9a, 0x7f, 0xaa, 0x40, 0x7b, 0xbc, 0x48, 0x39, 0x0d, 0x33, 0xe9, 0x3f, 0x04,
	0x23, 0x0b, 0x30, 0x4e, 0xc3, 0xd9, 0xd4, 0xe3, 0x54, 0x15, 0xed, 0x6d, 0x85, 0x4f, 0x14, 0x4c,
	0xbe, 0x06, 0x5d, 0xa5, 0x4f, 0xd9, 0x2a, 0x34, 0x4f, 0x3e, 0xef, 0xad, 0x09, 0xeb, 0xa9, 0x6f,
	0x6a, 0x45, 0x3c, 0x59, 0x38, 0x39, 0x37, 0xf9, 0x52, 0x25, 0xf9, 0x32, 0xe6, 0xcf, 0x9d, 0xc2,
	0xaa, 0x65, 0xaa, 0xdf, 0xff, 0x19, 0xb4, 0xd7, 0x64, 0xdc, 0x73, 0xe1, 0xbb, 0x50, 0x7d, 0xef,
	0x4d, 0xe7, 0x99, 0x3f, 0xc9, 0xc9, 0x0b, 0xed, 0xeb, 0x92, 0xf9, 0x57, 0x4d, 0x45, 0xe0, 0x3e,
	0xec, 0x89, 0x50, 0x71, 0xd1, 0xf3, 0xbf, 0x71, 0x5f, 0x3b, 0xc3, 0xcb, 0x91, 0x7b, 0xd1, 0x1f,
	0x58, 0x46, 0x89, 0x7c, 0x0e, 0x9d, 0x4d, 0x5a, 0xff, 0x5d, 0x7f, 0xd2, 0x77, 0x0c, 0x8d, 0x1c,
	0xc2, 0xc1, 0x26, 0xf5, 0xcc, 0x1a, 0x9f, 0x3a, 0xf6, 0x68, 0x62, 0x0f, 0x2f, 0x8c, 0x32, 0x79,
	0x02, 0xfb, 0x9b, 0x2c, 0x63, 0x6b, 0x32, 0xb1, 0x2f, 0x5e, 0x8f, 0x8d, 0x0a, 0x79, 0x0a, 0x8f,
	0x91, 0x3e, 0x9e, 0xf4, 0x9d, 0x49, 0x26, 0xff, 0xe2, 0xcc, 0xb5, 0x2f, 0xde, 0xd9, 0x13, 0x11,
	0xf6, 0x8f, 0x60, 0x47, 0x86, 0xbd, 0xfb, 0x4b, 0xeb, 0xfc, 0x74, 0x38, 0xb0, 0x5c, 0x8c, 0xeb,
	0x1a, 0x79, 0x0c, 0x8f, 0x70, 0xa5, 0xe4, 0x74, 0x87, 0x93, 0x37, 0x96, 0x33, 0x76, 0x7f, 0x3e,
	0xb4, 0x2f, 0x8c, 0x3a, 0xd9, 0x81, 0x6d, 0x24, 0xbe, 0xbd, 0xb4, 0x95, 0x54, 0x43, 0x27, 0x7b,
	0x40, 0x10, 0x74, 0xac, 0xc1, 0xf0, 0x5d, 0xb6, 0xc2, 0x68, 0xe4, 0x6a, 0x28, 0x7c, 0x53, 0x0d,
	0xc8, 0x8f, 0x79, 0xfa, 0xc6, 0x3a, 0xfd, 0x45, 0xb6, 0xd7, 0xc4, 0x3a, 0xb7, 0x64, 0xaf, 0xd4,
	0x24, 0x1d, 0xd8, 0x3d, 0xb3, 0x1c, 0xfb, 0x9d, 0xe5, 0xbe, 0x72, 0x86, 0x03, 0x77, 0x74, 0x32,
	0x72, 0x4f, 0xdf, 0xf4, 0x27, 0x46, 0xcb, 0xfc, 0x5b, 0x15, 0x2a, 0x98, 0x1b, 0x8b, 0xb5, 0xfc,
	0xd9, 0x5a, 0x2d, 0x87, 0x9e, 0x60, 0xc2, 0xdb, 0x7d, 0x51, 0x1e, 0x9d, 0x8c, 0x54, 0x35, 0xff,
	0x01, 0x6c, 0xcb, 0x8a, 0xb6, 0x4c, 0xeb, 0xb2, 0xaa, 0xb7, 0xb1, 0xa0, 0xe5, 0x09, 0x3d, 0x4b,
	0x1b, 0x95, 0x95, 0xb4, 0xf1, 0x04, 0x6a, 0xde, 0x7b, 0x8f, 0x7b, 0x09, 0x06, 0xce, 0x4a, 0x3b,
	0x22, 0x51, 0xf2, 0x19, 0xe8, 0xf1, 0x87, 0x88, 0x26, 0x42, 0x68, 0x0d, 0xd7, 0xd5, 0x71, 0x6e,
	0x07, 0xe4, 0x39, 0x3c, 0x88, 0xe8, 0x87, 0x7c, 0x57, 0x19, 0x7e, 0x75, 0x4c, 0x18, 0xdb, 0x11,
	0xfd, 0xa0, 0xf6, 0x95, 0x95, 0xeb, 0x8b, 0xbc, 0x39, 0xd0, 0x55, 0x57, 0x86, 0x9a, 0x14, 0x3a,
	0x83, 0x42, 0x09, 0x6d, 0x6c, 0x94, 0x50, 0xe5, 0xbb, 0xb0, 0xf4, 0xdd, 0x2e, 0x34, 0x03, 0x9a,
	0xfa, 0x09, 0x9b, 0x61, 0xbe, 0x6a, 0x22, 0x65, 0x15, 0x12, 0x1d, 0x5b, 0x48, 0xc3, 0x2b, 0x9a,
	0xa8, 0x13, 0xb6, 0xf0, 0x84, 0x4d, 0x89, 0xc9, 0xd3, 0x3d, 0x83, 0xb6, 0xa8, 0x74, 0x74, 0xe6,
	0x25, 0x5c, 0x44, 0x35, 0xd6, 0x76, 0xdd, 0x69, 0xb1, 0xf4, 0x2c, 0xc7, 0x44, 0xd5, 0x63, 0xa9,
	0x3b, 0x9b, 0x5f, 0x4d, 0x99, 0x8f, 0xd5, 0x5d, 0x77, 0x74, 0x96, 0x8e, 0x70, 0x4e, 0x4e, 0xe0,
	0xe1, 0xda, 0x15, 0xe4, 0x5d, 0xc2, 0x36, 0xee, 0xb6, 0xb3, 0x72, 0x11, 0xa3, 0xac, 0x61, 0x38,
	0x00, 0x98, 0xa7, 0xf9, 0xb1, 0x0c, 0x64, 0x6c, 0x08, 0x44, 0x1e, 0xea, 0x29, 0x34, 0xc5, 0x0d,
	0xb9, 0x33, 0x16, 0x2d, 0x58, 0xa4, 0xea, 0x3b, 0x08, 0x68, 0x84, 0x48, 0xb1, 0x57, 0x23, 0x1b,
	0xbd, 0x5a, 0x0f, 0x76, 0x58, 0xea, 0xfa, 0xf3, 0x94, 0xc7, 0x21, 0x4d, 0xdc, 0x94, 0x26, 0xef,
	0x99, 0x4f, 0x55, 0x31, 0x7f, 0xc0, 0xd2, 0x53, 0x45, 0x19, 0x4b, 0x82, 0x28, 0xf8, 0x72, 0xc7,
	0x45, 0x27, 0x90, 0x2d, 0x13, 0xee, 0xb6, 0x30, 0xf7, 0x97, 0x2f, 0x81, 0xd1, 0x89, 0x78, 0x09,
	0x34, 0xa0, 0x2a, 0x03, 0x46, 0x33, 0x7b, 0xf7, 0x54, 0xcc, 0xff, 0x13, 0x15, 0xb3, 0xef, 0x9c,
	0xbe, 0xb1, 0xdf, 0x59, 0x85, 0xf2, 0x69, 0xfe, 0x56, 0x83, 0xca, 0x65, 0x4a, 0x93, 0x0d, 0x57,
	0xbf, 0xaf, 0xa8, 0x1d, 0xe6, 0xde, 0x59, 0x2e, 0xd6, 0xca, 0xcc, 0x41, 0x97, 0xbd, 0xbc, 0x7a,
	0x3f, 0x29, 0x5f, 0x3a, 0x00, 0x90, 0x1c, 0xee, 0x3c, 0x99, 0xaa, 0xaa, 0xd0, 0x90, 0xc8, 0x65,
	0x32, 0x2d, 0x5a, 0xb7, 0x76, 0x9f, 0x75, 0x57, 0x7d, 0xb1, 0xbe, 0xe1, 0x8b, 0xd2, 0x69, 0x12,
	0x7a, 0xc3, 0x52, 0x4e, 0x13, 0x2a, 0x3b, 0x50, 0x74, 0x1a, 0x27, 0xc7, 0x56, 0x4d, 0x0a, 0x6b,
	0x26, 0xfd, 0x67, 0x09, 0xca, 0x2f, 0x63, 0xfe, 0xdf, 0xb7, 0xc2, 0xaa, 0x92, 0xb5, 0x0d, 0x25,
	0x0f, 0x40, 0x3a, 0x54, 0x8c, 0x09, 0xa0, 0x2e, 0xd7, 0x2b, 0x04, 0x9b, 0xbd, 0xb5, 0xe8, 0xd3,
	0x37, 0xa3, 0xef, 0xa3, 0x06, 0xf8, 0xbb, 0x06, 0x75, 0x91, 0x03, 0xf8, 0xff, 0x82, 0x2b, 0x7c,
	0xda, 0x08, 0x05, 0x5f, 0xa9, 0x6f, 0xf8, 0xca, 0xba, 0x95, 0xf4, 0x4d, 0x2b, 0xc9, 0x24, 0xde,
	0x58, 0x49, 0x7d, 0x9c, 0x26, 0x2b, 0xef, 0xb1, 0x7f, 0x9f, 0xc5, 0x36, 0xbc, 0xad, 0xf5, 0x69,
	0x6f, 0x6b, 0xaf, 0x19, 0xfb, 0x1f, 0x25, 0xd8, 0x56, 0xe9, 0xc7, 0xa1, 0x9e, 0x9f, 0xa5, 0x9f,
	0xb5, 0xbf, 0x0a, 0x85, 0x47, 0xf9, 0x57, 0xd0, 0x48, 0x14, 0x6b, 0xd6, 0x9b, 0x7c, 0xd6, 0x2b,
	0xc8, 0xe8, 0x65, 0x03, 0x67, 0xc9, 0x5b, 0x34, 0x67, 0xb9, 0x68, 0xce, 0xfd, 0x19, 0xe8, 0xf9,
	0x21, 0x88, 0x32, 0x4d, 0xd6, 0x2f, 0x0b, 0x63, 0xec, 0x42, 0x55, 0xa6, 0x44, 0xd9, 0x7c, 0xca,
	0x89, 0x28, 0x44, 0x98, 0x2d, 0x59, 0x90, 0xb5, 0x61, 0x75, 0x31, 0xb7, 0x03, 0xdc, 0xd1, 0x97,
	0x26, 0x45, 0x6a, 0x05, 0xa9, 0xa0, 0x20, 0x3b, 0x48, 0xcd, 0xbf, 0x68, 0x2b, 0xea, 0x87, 0x2c,
	0x0a, 0x56, 0x7c, 0x4e, 0x53, 0x3e, 0x57, 0xfc, 0x47, 0x51, 0xf8, 0xc9, 0xf2, 0x0c, 0xda, 0x89,
	0x5a, 0x9a, 0xe9, 0xa5, 0x1d, 0x95, 0x9d, 0x56, 0x06, 0x66, 0xbf, 0x52, 0xb2, 0x37, 0x67, 0x05,
	0x05, 0x64, 0x6f, 0xce, 0x1e, 0x3c, 0xc8, 0x57, 0xe7, 0xa5, 0xa1, 0xda, 0xd5, 0x8e, 0xaa, 0x2f,
	0x4a, 0x3f, 0x71, 0x8c, 0x8c, 0x96, 0x97, 0x86, 0x43, 0xd0, 0x7d, 0x2f, 0xf2, 0xe9, 0x94, 0x8a,
	0xaa, 0xab, 0x2d, 0x9f, 0x47, 0x39, 0x4c, 0xfe, 0x1f, 0xb6, 0xd4, 0x7f, 0x09, 0x1a, 0x64, 0x29,
	0x4a, 0x9c, 0xa8, 0x9d, 0xa3, 0x78, 0xa4, 0x1f, 0x2d, 0x9b, 0xd1, 0x7c, 0x63, 0x3d, 0xdb, 0x38,
	0xeb, 0x47, 0x47, 0x1f, 0x79, 0xc3, 0x6e, 0x14, 0x60, 0xf3, 0x2d, 0x34, 0x85, 0xf7, 0x8e, 0x29,
	0xe7, 0xe2, 0x25, 0x78, 0x88, 0x35, 0x51, 0x1e, 0x1f, 0xef, 0x50, 0x7f, 0x51, 0xe1, 0xc9, 0x9c,
	0x8a, 0xca, 0x28, 0x2d, 0x5d, 0x14, 0xa9, 0x6d, 0x88, 0xfc, 0x73, 0x09, 0x60, 0xa5, 0xcc, 0x16,
	0xef, 0xe5, 0xbe, 0x5c, 0xb0, 0xf6, 0xf0, 0x2f, 0x17, 0x1e, 0xfe, 0x8f, 0xa1, 0x31, 0xa5, 0x5e,
	0x20, 0x5b, 0x16, 0xf5, 0xe3, 0x48, 0x02, 0x76, 0xb0, 0xd1, 0x0c, 0x54, 0x37, 0x9b, 0x81, 0xbd,
	0xb5, 0xff, 0x18, 0xd5, 0xd5, 0xe6, 0xe4, 0x93, 0x59, 0xc0, 0xfc, 0x0d, 0xd4, 0xc4, 0xb3, 0xc4,
	0xa7, 0xe4, 0x39, 0xb4, 0xd3, 0xdb, 0x78, 0x3e, 0x0d, 0xe4, 0xcb, 0x65, 0xa1, 0x4c, 0xa3, 0xee,
	0xb0, 0x25, 0x69, 0xf8, 0x84, 0x59, 0x2c, 0xdf, 0x22, 0xda, 0xea, 0x5b, 0x64, 0xe5, 0x37, 0x8b,
	0xd4, 0x2f, 0xff, 0xcd, 0xd2, 0x81, 0x7a, 0x3a, 0x0f, 0x43, 0x2f, 0x59, 0x28, 0xe5, 0xb2, 0xe9,
	0xf3, 0xae, 0xbc, 0x1b, 0x95, 0x59, 0xee, 0x79, 0xdd, 0xbe, 0x3c, 0x87, 0x3d, 0x3f, 0x0e, 0x7b,
	0x69, 0xda, 0xf3, 0xa2, 0x20, 0x89, 0x59, 0xd0, 0x9b, 0x7a, 0xc9, 0x5d, 0x6f, 0x76, 0xf5, 0xed,
	0xc9, 0x0d, 0xe3, 0xbd, 0xab, 0x05, 0xa7, 0x41, 0x2f, 0x4e, 0x6e, 0x8e, 0x29, 0x3d, 0x16, 0x94,
	0x63, 0x16, 0xfe, 0x18, 0x7f, 0x75, 0x5e, 0xcd, 0xaf, 0x8f, 0x59, 0x88, 0xc3, 0xe3, 0xec, 0x27,
	0xe8, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x29, 0x27, 0xf7, 0x0f, 0x15, 0x00, 0x00,
}
