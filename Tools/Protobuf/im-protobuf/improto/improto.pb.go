// Code generated by protoc-gen-go.
// source: improto.proto
// DO NOT EDIT!

/*
Package improto is a generated protocol buffer package.

It is generated from these files:
	improto.proto

It has these top-level messages:
	BaseResp
*/
package improto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// IM 协议报文头中cmd
type Command int32

const (
	Command_ACK          Command = 0
	Command_SEND_MESSAGE Command = 1
	Command_PUSH_MESSAGE Command = 2
)

var Command_name = map[int32]string{
	0: "ACK",
	1: "SEND_MESSAGE",
	2: "PUSH_MESSAGE",
}
var Command_value = map[string]int32{
	"ACK":          0,
	"SEND_MESSAGE": 1,
	"PUSH_MESSAGE": 2,
}

func (x Command) Enum() *Command {
	p := new(Command)
	*p = x
	return p
}
func (x Command) String() string {
	return proto.EnumName(Command_name, int32(x))
}
func (x *Command) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Command_value, data, "Command")
	if err != nil {
		return err
	}
	*x = Command(value)
	return nil
}
func (Command) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// IM 协议报文头中payload_type
type PayloadType int32

const (
	PayloadType_PB2 PayloadType = 0
)

var PayloadType_name = map[int32]string{
	0: "PB2",
}
var PayloadType_value = map[string]int32{
	"PB2": 0,
}

func (x PayloadType) Enum() *PayloadType {
	p := new(PayloadType)
	*p = x
	return p
}
func (x PayloadType) String() string {
	return proto.EnumName(PayloadType_name, int32(x))
}
func (x *PayloadType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PayloadType_value, data, "PayloadType")
	if err != nil {
		return err
	}
	*x = PayloadType(value)
	return nil
}
func (PayloadType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 由于长连接没有状态码，BaseResp 应该包含在所有服务器返回包中，以标识服务器处理状态。
type BaseResp struct {
	Status           *int32  `protobuf:"varint,1,req,name=status,def=0" json:"status,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BaseResp) Reset()                    { *m = BaseResp{} }
func (m *BaseResp) String() string            { return proto.CompactTextString(m) }
func (*BaseResp) ProtoMessage()               {}
func (*BaseResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_BaseResp_Status int32 = 0

func (m *BaseResp) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_BaseResp_Status
}

func (m *BaseResp) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*BaseResp)(nil), "BaseResp")
	proto.RegisterEnum("Command", Command_name, Command_value)
	proto.RegisterEnum("PayloadType", PayloadType_name, PayloadType_value)
}

func init() { proto.RegisterFile("improto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0xcc, 0x2d, 0x28,
	0xca, 0x2f, 0xc9, 0xd7, 0x03, 0x93, 0x4a, 0xf6, 0x5c, 0x1c, 0x4e, 0x89, 0xc5, 0xa9, 0x41, 0xa9,
	0xc5, 0x05, 0x42, 0x92, 0x5c, 0x6c, 0xc5, 0x25, 0x89, 0x25, 0xa5, 0xc5, 0x12, 0x8c, 0x0a, 0x4c,
	0x1a, 0xac, 0x56, 0x8c, 0x06, 0x41, 0x50, 0x01, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2,
	0xc4, 0xf4, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0x57, 0xcb, 0x8c, 0x8b, 0xdd,
	0x39, 0x3f, 0x37, 0x37, 0x31, 0x2f, 0x45, 0x88, 0x9d, 0x8b, 0xd9, 0xd1, 0xd9, 0x5b, 0x80, 0x41,
	0x48, 0x80, 0x8b, 0x27, 0xd8, 0xd5, 0xcf, 0x25, 0xde, 0xd7, 0x35, 0x38, 0xd8, 0xd1, 0xdd, 0x55,
	0x80, 0x11, 0x24, 0x12, 0x10, 0x1a, 0xec, 0x01, 0x17, 0x61, 0xd2, 0x12, 0xe3, 0xe2, 0x0e, 0x48,
	0xac, 0xcc, 0xc9, 0x4f, 0x4c, 0x09, 0xa9, 0x2c, 0x48, 0x05, 0xe9, 0x0d, 0x70, 0x32, 0x12, 0x60,
	0x70, 0xd2, 0x8e, 0xd2, 0x4c, 0xcf, 0x2c, 0xd1, 0x4b, 0xaa, 0x2c, 0x49, 0x4d, 0xd1, 0xcb, 0x2f,
	0x4a, 0xd7, 0x4f, 0x4d, 0xd5, 0xcf, 0x49, 0x2c, 0xca, 0xd6, 0xcf, 0xcc, 0xd5, 0x05, 0x3b, 0x39,
	0xa9, 0x34, 0x4d, 0x1f, 0xea, 0x07, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42, 0x61, 0x7b, 0xf5,
	0xcd, 0x00, 0x00, 0x00,
}
