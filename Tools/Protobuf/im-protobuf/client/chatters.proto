syntax = "proto2";
option java_package = "com.bytedance.lark.pb";

import "entities.proto";

// MGetChatters: sync + async

message MGetChattersRequest {
    repeated string chatter_ids                    = 1;
}

message MGetChattersResponse {
    required Entity entity                         = 1;
}

// GetWantedAtChatters: async

message GetWantedAtChattersRequest {
    repeated string chat_ids                       = 1;
}

message GetWantedAtChattersResponse {
    message ChatterIds {
        repeated string chatter_ids                = 1;
    }
    map<string, ChatterIds> pairs                  = 1;
    required Entity entity                         = 2;
}

enum ChatterDescriptionType {
    ON_DEFAULT                                     = 0; // 默认
    ON_BUSINESS                                    = 1; // 出差
    ON_LEAVE                                       = 2; // 请假
    ON_MEETING                                     = 3; // 开会
}

// GetChatterProfile: async + sync

message GetChatterProfileRequest {
    required string chatter_id                     = 1;
}

message GetChatterProfileResponse {
    message Company {
        optional string department_name            = 1 [default = ""];
        optional string organization_name          = 2 [default = ""];
        map<string, string> leader                 = 3; // leader name => leader profile url
    }
    message Personal {
        required string name                       = 1;
        optional string description                = 2 [default = ""];
        optional string email                      = 3 [default = ""];
        optional string gender                     = 4 [default = ""];
        optional string malaita_profile_url        = 5 [default = ""];
        optional ChatterDescriptionType description_type = 6;
        optional string city                       = 7;
    }
    optional Company company                       = 1;
    required Personal personal                     = 2;
}

// GetChatterMobile: async

message GetChatterMobileRequest {
    required string chatter_id                     = 1;
}

message GetChatterMobileResponse {
    optional string mobile                         = 1;
}

// UpdateChatter: async

message UpdateChatterRequest {
    optional string description                    = 1;
    optional ChatterDescriptionType description_type = 2;
}

message UpdateChatterResponse {
    optional string message                        = 1;
}

// GetChatterDescriptions: async

message GetChatterDescriptionsRequest {
    optional int32 count                           = 1 [default = 20];
    optional int32 offset                          = 2 [default = 0];
}

message GetChatterDescriptionsResponse {
    message Pair {
        optional string description                = 1 [default = ""];
        optional ChatterDescriptionType description_type = 2;
    }
    repeated Pair pairs                            = 1;
    optional bool has_more                         = 2 [default = false];
}

// GetBots: async

message GetBotsRequest {
   optional int32 offset = 1 [default = 0];
   optional int32 count = 2 [default = 20];
}

message GetBotsResponse {
    optional bool has_more = 1;
    repeated Chatter bots = 2;
}
