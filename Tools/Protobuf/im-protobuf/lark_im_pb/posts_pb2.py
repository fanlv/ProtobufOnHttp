# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: posts.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import entities_pb2 as entities__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='posts.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\x0bposts.proto\x1a\x0e\x65ntities.proto\"*\n\x17PullPostCommentsReqeust\x12\x0f\n\x07post_id\x18\x01 \x02(\t\"H\n\x18PullPostCommentsResponse\x12\x14\n\x0croot_post_id\x18\x01 \x02(\t\x12\x16\n\x0e\x63hild_post_ids\x18\x02 \x03(\t2W\n\x0bPostGreeter\x12H\n\x0fgetPostComments\x12\x18.PullPostCommentsReqeust\x1a\x19.PullPostCommentsResponse\"\x00\x42I\n\x16\x63om.ss.android.lark.pbZ/git.byted.org/ee/lark/im-protobuf/improto/posts')
  ,
  dependencies=[entities__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_PULLPOSTCOMMENTSREQEUST = _descriptor.Descriptor(
  name='PullPostCommentsReqeust',
  full_name='PullPostCommentsReqeust',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='post_id', full_name='PullPostCommentsReqeust.post_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=31,
  serialized_end=73,
)


_PULLPOSTCOMMENTSRESPONSE = _descriptor.Descriptor(
  name='PullPostCommentsResponse',
  full_name='PullPostCommentsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='root_post_id', full_name='PullPostCommentsResponse.root_post_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='child_post_ids', full_name='PullPostCommentsResponse.child_post_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=147,
)

DESCRIPTOR.message_types_by_name['PullPostCommentsReqeust'] = _PULLPOSTCOMMENTSREQEUST
DESCRIPTOR.message_types_by_name['PullPostCommentsResponse'] = _PULLPOSTCOMMENTSRESPONSE

PullPostCommentsReqeust = _reflection.GeneratedProtocolMessageType('PullPostCommentsReqeust', (_message.Message,), dict(
  DESCRIPTOR = _PULLPOSTCOMMENTSREQEUST,
  __module__ = 'posts_pb2'
  # @@protoc_insertion_point(class_scope:PullPostCommentsReqeust)
  ))
_sym_db.RegisterMessage(PullPostCommentsReqeust)

PullPostCommentsResponse = _reflection.GeneratedProtocolMessageType('PullPostCommentsResponse', (_message.Message,), dict(
  DESCRIPTOR = _PULLPOSTCOMMENTSRESPONSE,
  __module__ = 'posts_pb2'
  # @@protoc_insertion_point(class_scope:PullPostCommentsResponse)
  ))
_sym_db.RegisterMessage(PullPostCommentsResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\026com.ss.android.lark.pbZ/git.byted.org/ee/lark/im-protobuf/improto/posts'))
# @@protoc_insertion_point(module_scope)
